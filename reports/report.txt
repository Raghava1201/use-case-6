#Deployment Report
This file was generated during the github actions workflow run.

## Terraform Plan Output
[command]/home/runner/work/_temp/d6711569-623f-4a14-8fa5-760b11788058/terraform-bin plan -no-color -lock=false
random_password.master: Refreshing state... [id=none]
module.aurora_db.aws_db_subnet_group.aurora_subnet_group: Refreshing state... [id=bayer-aurora-project-aurora-subnet-group]
aws_security_group.aurora_sg: Refreshing state... [id=sg-0155d41902492c49d]
module.aurora_db.aws_rds_cluster.aurora1: Refreshing state... [id=bayer-aurora-project-aurora]
module.aurora_db.aws_rds_cluster_instance.aurora_instance[0]: Refreshing state... [id=bayer-aurora-project-aurora-1]
module.aurora_db.aws_rds_cluster_instance.aurora_instance[1]: Refreshing state... [id=bayer-aurora-project-aurora-2]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # module.aurora_db.aws_rds_cluster.aurora1 will be updated in-place
  ~ resource "aws_rds_cluster" "aurora1" {
      ~ final_snapshot_identifier             = "final-bayer-aurora-project-aurora-2025-04-21T145031Z" -> (known after apply)
        id                                    = "bayer-aurora-project-aurora"
        tags                                  = {}
        # (57 unchanged attributes hidden)
    }

  # module.aurora_db.aws_secretsmanager_secret.aurora_credentials will be created
  + resource "aws_secretsmanager_secret" "aurora_credentials" {
      + arn                            = (known after apply)
      + force_overwrite_replica_secret = false
      + id                             = (known after apply)
      + name                           = "bayer-aurora-credentials-2"
      + name_prefix                    = (known after apply)
      + policy                         = (known after apply)
      + recovery_window_in_days        = 30
      + tags_all                       = (known after apply)

      + replica (known after apply)
    }

  # module.aurora_db.aws_secretsmanager_secret_version.aurora_credentials_version will be created
  + resource "aws_secretsmanager_secret_version" "aurora_credentials_version" {
      + arn                  = (known after apply)
      + has_secret_string_wo = (known after apply)
      + id                   = (known after apply)
      + secret_id            = (known after apply)
      + secret_string        = (sensitive value)
      + secret_string_wo     = (write-only attribute)
      + version_id           = (known after apply)
      + version_stages       = (known after apply)
    }

Plan: 2 to add, 1 to change, 0 to destroy.

Changes to Outputs:
  + database_credentials_secret_arn = (known after apply)

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
::debug::Terraform exited with code 0.
::debug::stdout: random_password.master: Refreshing state... [id=none]%0Amodule.aurora_db.aws_db_subnet_group.aurora_subnet_group: Refreshing state... [id=bayer-aurora-project-aurora-subnet-group]%0Aaws_security_group.aurora_sg: Refreshing state... [id=sg-0155d41902492c49d]%0Amodule.aurora_db.aws_rds_cluster.aurora1: Refreshing state... [id=bayer-aurora-project-aurora]%0Amodule.aurora_db.aws_rds_cluster_instance.aurora_instance[0]: Refreshing state... [id=bayer-aurora-project-aurora-1]%0Amodule.aurora_db.aws_rds_cluster_instance.aurora_instance[1]: Refreshing state... [id=bayer-aurora-project-aurora-2]%0A%0ATerraform used the selected providers to generate the following execution%0Aplan. Resource actions are indicated with the following symbols:%0A  + create%0A  ~ update in-place%0A%0ATerraform will perform the following actions:%0A%0A  # module.aurora_db.aws_rds_cluster.aurora1 will be updated in-place%0A  ~ resource "aws_rds_cluster" "aurora1" {%0A      ~ final_snapshot_identifier             = "final-bayer-aurora-project-aurora-2025-04-21T145031Z" -> (known after apply)%0A        id                                    = "bayer-aurora-project-aurora"%0A        tags                                  = {}%0A        # (57 unchanged attributes hidden)%0A    }%0A%0A  # module.aurora_db.aws_secretsmanager_secret.aurora_credentials will be created%0A  + resource "aws_secretsmanager_secret" "aurora_credentials" {%0A      + arn                            = (known after apply)%0A      + force_overwrite_replica_secret = false%0A      + id                             = (known after apply)%0A      + name                           = "bayer-aurora-credentials-2"%0A      + name_prefix                    = (known after apply)%0A      + policy                         = (known after apply)%0A      + recovery_window_in_days        = 30%0A      + tags_all                       = (known after apply)%0A%0A      + replica (known after apply)%0A    }%0A%0A  # module.aurora_db.aws_secretsmanager_secret_version.aurora_credentials_version will be created%0A  + resource "aws_secretsmanager_secret_version" "aurora_credentials_version" {%0A      + arn                  = (known after apply)%0A      + has_secret_string_wo = (known after apply)%0A      + id                   = (known after apply)%0A      + secret_id            = (known after apply)%0A      + secret_string        = (sensitive value)%0A      + secret_string_wo     = (write-only attribute)%0A      + version_id           = (known after apply)%0A      + version_stages       = (known after apply)%0A    }%0A%0APlan: 2 to add, 1 to change, 0 to destroy.%0A%0AChanges to Outputs:%0A  + database_credentials_secret_arn = (known after apply)%0A%0A─────────────────────────────────────────────────────────────────────────────%0A%0ANote: You didn't use the -out option to save this plan, so Terraform can't%0Aguarantee to take exactly these actions if you run "terraform apply" now.%0A
::debug::stderr: 
::debug::exitcode: 0
